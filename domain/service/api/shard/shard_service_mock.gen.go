// Code generated by MockGen. DO NOT EDIT.
// Source: ./shard_service.go

// Package shard is a generated GoMock package.
package shard

import (
	reflect "reflect"

	shard "github.com/game-core/gocrafter/api/presentation/response/shard"
	gomock "github.com/golang/mock/gomock"
)

// MockShardService is a mock of ShardService interface.
type MockShardService struct {
	ctrl     *gomock.Controller
	recorder *MockShardServiceMockRecorder
}

// MockShardServiceMockRecorder is the mock recorder for MockShardService.
type MockShardServiceMockRecorder struct {
	mock *MockShardService
}

// NewMockShardService creates a new mock instance.
func NewMockShardService(ctrl *gomock.Controller) *MockShardService {
	mock := &MockShardService{ctrl: ctrl}
	mock.recorder = &MockShardServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShardService) EXPECT() *MockShardServiceMockRecorder {
	return m.recorder
}

// GetShard mocks base method.
func (m *MockShardService) GetShard() (*shard.GetShard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShard")
	ret0, _ := ret[0].(*shard.GetShard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShard indicates an expected call of GetShard.
func (mr *MockShardServiceMockRecorder) GetShard() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShard", reflect.TypeOf((*MockShardService)(nil).GetShard))
}
