name: Deploy API Game

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch Name'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # AWS Auth
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      # AWS ECR Auth
      - uses: aws-actions/amazon-ecr-login@v2

      # Build
      - name: Build Docker Image
        run: |
          docker build -f platform/docker/api/game/Dockerfile \
          --target prod \
          --tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/gocrafter-main:api-game .

      # Push
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/gocrafter-main:api-game

      # Remove Image
      - name: Remove Untagged Images from ECR
        run: |
          UNTAGGED_IMAGES=$(aws ecr describe-images --repository-name gocrafter-main --region ap-northeast-1 --query 'imageDetails[?imageTags[0]==`null`].imageDigest' --output text)
          if [ ! -z "$UNTAGGED_IMAGES" ]; then
            for image in $UNTAGGED_IMAGES; do
              aws ecr batch-delete-image --repository-name gocrafter-main --region ap-northeast-1 --image-ids imageDigest=$image
            done
          fi
