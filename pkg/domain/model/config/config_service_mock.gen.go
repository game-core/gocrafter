// Code generated by MockGen. DO NOT EDIT.
// Source: ./config_service.go

// Package config is a generated GoMock package.
package config

import (
	context "context"
	reflect "reflect"

	enum "github.com/game-core/gocrafter/pkg/domain/enum"
	masterConfig "github.com/game-core/gocrafter/pkg/domain/model/config/masterConfig"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigService is a mock of ConfigService interface.
type MockConfigService struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceMockRecorder
}

// MockConfigServiceMockRecorder is the mock recorder for MockConfigService.
type MockConfigServiceMockRecorder struct {
	mock *MockConfigService
}

// NewMockConfigService creates a new mock instance.
func NewMockConfigService(ctrl *gomock.Controller) *MockConfigService {
	mock := &MockConfigService{ctrl: ctrl}
	mock.recorder = &MockConfigServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigService) EXPECT() *MockConfigServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockConfigService) GetAll(cxt context.Context) (masterConfig.MasterConfigs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", cxt)
	ret0, _ := ret[0].(masterConfig.MasterConfigs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockConfigServiceMockRecorder) GetAll(cxt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockConfigService)(nil).GetAll), cxt)
}

// GetByConfigType mocks base method.
func (m *MockConfigService) GetByConfigType(cxt context.Context, configType enum.ConfigType) (*masterConfig.MasterConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByConfigType", cxt, configType)
	ret0, _ := ret[0].(*masterConfig.MasterConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByConfigType indicates an expected call of GetByConfigType.
func (mr *MockConfigServiceMockRecorder) GetByConfigType(cxt, configType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByConfigType", reflect.TypeOf((*MockConfigService)(nil).GetByConfigType), cxt, configType)
}
