// Code generated by MockGen. DO NOT EDIT.
// Source: ./idle_bonus_service.go

// Package idleBonus is a generated GoMock package.
package idleBonus

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockIdleBonusService is a mock of IdleBonusService interface.
type MockIdleBonusService struct {
	ctrl     *gomock.Controller
	recorder *MockIdleBonusServiceMockRecorder
}

// MockIdleBonusServiceMockRecorder is the mock recorder for MockIdleBonusService.
type MockIdleBonusServiceMockRecorder struct {
	mock *MockIdleBonusService
}

// NewMockIdleBonusService creates a new mock instance.
func NewMockIdleBonusService(ctrl *gomock.Controller) *MockIdleBonusService {
	mock := &MockIdleBonusService{ctrl: ctrl}
	mock.recorder = &MockIdleBonusServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdleBonusService) EXPECT() *MockIdleBonusServiceMockRecorder {
	return m.recorder
}

// Receive mocks base method.
func (m *MockIdleBonusService) Receive(ctx context.Context, tx *gorm.DB, now time.Time, req *IdleBonusReceiveRequest) (*IdleBonusReceiveResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Receive", ctx, tx, now, req)
	ret0, _ := ret[0].(*IdleBonusReceiveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Receive indicates an expected call of Receive.
func (mr *MockIdleBonusServiceMockRecorder) Receive(ctx, tx, now, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Receive", reflect.TypeOf((*MockIdleBonusService)(nil).Receive), ctx, tx, now, req)
}
